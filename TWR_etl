import tweepy
import pandas as pd
from datetime import datetime
from google.cloud import bigquery

def run_twitter_etl():
    # Twitter API keys
    access_key = "...."
    access_secret = "..."
    consumer_key = "..."
    consumer_secret = "...."

    # Twitter authentication
    auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
    auth.set_access_token(access_key, access_secret)

    # Creating an API object
    api = tweepy.API(auth)

    try:
        # Retrieve user timeline
        tweets = api.user_timeline(screen_name='@elonmusk',
                                   count=200,
                                   include_rts=False,
                                   tweet_mode='extended')

        # Extract relevant tweet information
        tweet_data = []
        for tweet in tweets:
            refined_tweet = {
                'user': tweet.user.screen_name,
                'text': tweet.full_text,
                'favorite_count': tweet.favorite_count,
                'retweet_count': tweet.retweet_count,
                'created_at': tweet.created_at
            }
            tweet_data.append(refined_tweet)

        # Create a DataFrame from the tweet data
        df = pd.DataFrame(tweet_data)

        # Save refined tweets to BigQuery
        project_id = "your-project-id"
        dataset_id = "your-dataset-id"
        table_id = "refined_tweets"
        client = bigquery.Client(project=project_id)

        # Prepare the DataFrame for upload to BigQuery
        job_config = bigquery.LoadJobConfig(
            write_disposition=bigquery.WriteDisposition.WRITE_TRUNCATE
        )

        # Upload the DataFrame to BigQuery
        job = client.load_table_from_dataframe(df, f"{project_id}.{dataset_id}.{table_id}", job_config=job_config)
        job.result()  # Wait for the job to complete

        print(f"Refined tweets saved to BigQuery table: {project_id}.{dataset_id}.{table_id}")

    except tweepy.TweepError as e:
        print(f"Error: {e}")
    except Exception as e:
        print(f"An error occurred: {e}")

# Call the function to run the ETL process
run_twitter_etl()
